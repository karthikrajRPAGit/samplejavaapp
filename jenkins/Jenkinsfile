pipeline {
    agent any
    environment {
	dockerHome = tool 'myDocker'
	PATH = "$dockerHome/bin:$PATH"
	DOCKERHUB_CREDENTIALS = credentials('docker')
    }
    stages {
        stage('compile') {
	   steps {
                echo 'compiling..'
		git url: 'https://github.com/puneetgavri/samplejavaapp.git'
		sh script: '/opt/maven/bin/mvn compile'
           }
        }
        stage('codereview-pmd') {
	   steps {
                echo 'codereview..'
		sh script: '/opt/maven/bin/mvn -P metrics pmd:pmd'
           }
	   post {
               success {
		   recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
               }
           }		
        }
        stage('unit-test') {
	   steps {
                echo 'unittest..'
	        sh script: '/opt/maven/bin/mvn test'
                 }
	   post {
               success {
                   junit 'target/surefire-reports/*.xml'
               }
           }			
        }
        stage('package') {
	   steps {
                echo 'package......'
		sh script: '/opt/maven/bin/mvn package'	
           }		
        }
	stage('Build Docker Image') {
	   steps {
		 sh script: 'docker build -t dockthik/samplejavaapp-intelprojdevops:${env.BUILD_NUMBER} .'
	   }
	}
	stage('Login to DockerHub') {
	   steps {
		sh 'echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
		}
	}
	stage('Push Docker Image') {
	   steps {
		echo 'Pushing Docker Image....'
		sh 'sudo docker push dockthik/samplejavaapp-intelprojdevops:${env.BUILD_NUMBER}'
	       }
	   post {
		success {
			when {
				expression { "$env.BRANCH_NAME" == "master" }
			}
			steps {
				sh script: 'docker pull dockthik/samplejavaapp-intelassess:latest; docker run -d -p 8081:8081 dockthik/samplejavaapp-intelassess:latest'
			}
		}
	   }
	}
		
    }
    
}
